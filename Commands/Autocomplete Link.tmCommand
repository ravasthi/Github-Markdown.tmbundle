<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
scope = $stdin.read

refs = []

case scope
when /\[#(.*)\]/
  pre = $~[1]
  
  files = Dir.glob("#{ENV['TM_DIRECTORY']}/**/*.mdk")
             .delete_if{|p| p =~ /\/out\// }
  
  refs = files.map{|f| IO.read(f).scan(/\[#(.*?)\]|{\s*#([a-zA-Z0-9:_-]+).*?}/) }
              .flatten
              .select{|s| s =~ /#{pre}/ }
              .uniq
  
  prev = "#"
  
when /\[(@.*)\]/
  scope = $~[1]
   
  cites = scope.split(";") # get each individual citekey
                .map{|w| w =~ /@(.*)/; $~[1] } # trim '@' off of each
   
  # just try to complete the last one
  prefix = cites.pop
   
  bibfiles = Dir.glob("#{ENV['TM_DIRECTORY']}/**/*.bib")
  bibfiles.delete_if{|p| p =~ /\/out\//}
  bibfiles &lt;&lt; "#{ENV['HOME']}/Dropbox/all.bib"
   
  refs = bibfiles.map{|f| IO.read(f).scan(/@\w+\s*{\s*(.+?)\s*,/) }
                 .flatten
                 .select{|s| s =~ /#{prefix}/ }
                 .uniq

  prev = !cites.empty? ? "@#{cites.join(';@')};@" : "@"

end

$stdout.write "[#{prev}${1|#{refs.join(',')}|}]"
</string>
	<key>input</key>
	<string>scope</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>	</string>
	<key>name</key>
	<string>Autocomplete Link</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>snippet</string>
	<key>outputLocation</key>
	<string>replaceInput</string>
	<key>scope</key>
	<string>meta.link.citation.inline.markdown</string>
	<key>uuid</key>
	<string>3A1EAC38-BA33-4E0F-965D-3CFEA47D88D5</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
